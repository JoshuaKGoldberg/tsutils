export {};
namespace one {}
class one {}
let varOne: typeof one;
    ~~~~~~ [Unused]

class two {}
namespace ns {
          ~~ [Unused]
    namespace two {}
              ~~~ [Unused]
    let varTwo: typeof two{}
        ~~~~~~ [Unused]
}

interface three {}
namespace ns {
          ~~ [Unused]
    namespace three {}
              ~~~~~ [Unused]
    let varThree: three;
        ~~~~~~~~ [Unused]
}

interface four {}
namespace four {}
let varFour: four;
    ~~~~~~~ [Unused]

function foo1() {}
         ~~~~ [Unused]
function foo2() {}
         ~~~~ [Unused]
function foo3() {}
namespace extended {
          ~~~~~~~~ [Unused]
    function foo1() {}
    export function foo2() {}
    export namespace nested {
        foo1();
        foo2();
        export function foo3() {}
    }
    foo1();
    foo2();
}
namespace extended.nested {
          ~~~~~~~~ [Unused]
    foo2();
}
namespace extended {
          ~~~~~~~~ [Unused]
    namespace nested {
              ~~~~~~ [Unused]
        foo3();
    }
}